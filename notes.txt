- faire une struct dans WindowManager pour contenir des variables (au moins World) ?
- check si on peut changer les paramètres du clavier pour GLFW
- voir pour faire une enum debug dans les classes où c'est nécessaire
- check pourquoi notes.txt apparaît dans les fichiers alors qu'il est dans le gitignore

pour opti le fix + avoir les voisins dans le thread
- faire un tableau + avoir les coord du chunk du joueur dans le thread
- quand de nouveau thread sont à charger, remplacer leur position par NULL dans le tableau avec le même calcul que dans le main thread
- la boucle passe sur tout le tableau et charge tous les chunks qui sont à null 
=> problème si 2 threads sont null l'un à côté de l'autre (comme au début par exemple, ou si le joueur se déplace trop vite)

autre idée: au lieu d'envoyer le chunk en entier, envoyer moins d'infos qui sont plus simple à générer rapidement, et du coup fix le problème trouver au dessus
sinon il faut générer tous les chunkData puis tous les chunkMesh

solution: donc un tableau de ChunkData plutôt que de ChunkMesh, qu'on update en fonction de la position du joueur, et on garde le système de stack pour les chunkMesh
le travail pourrait presque être séparé en 2 thread mais on y réfléchira plus tard

- sûrement possibilité de faire une classe parente aux 2 classes world actuelles afin de refactoriser le code
- peut-être passer les stacks en vector au final
- besoin de faire le tableau 1 plus grand pour éviter le problème quand l'update des coord se fait plus vite que l'update du joueur, ou alors dans le main thread check régulièrement si on a des chunks pas chargé et les rajouter